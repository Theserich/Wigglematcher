name: Build Executables

on:
  push:
    tags:
      - 'v*'      # Triggers on tags like v1.0.0
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            output_name: app.exe
            artifact_name: windows-executable
            data_sep: ';'
          - os: macos-latest
            output_name: app
            artifact_name: macos-executable
            data_sep: ':'
          - os: ubuntu-latest
            output_name: app
            artifact_name: linux-executable
            data_sep: ':'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'    # If PyInstaller has issues, try 3.12 or 3.11
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-xinerama0 libxcb-cursor0 libqt5gui5 \
            libx11-6 libxrender1 libxkbcommon0 libegl1 libglib2.0-0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Remove --windowed if your app is console-based
      - name: Build executable
        run: |
          pyinstaller --noconfirm --onefile --windowed \
            --name "${{ matrix.output_name }}" \
            --add-data "Library${{ matrix.data_sep }}Library" \
            main.py
      

      - name: Show dist contents (debug)
        run: ls -la dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.output_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files (debug)
        run: |
          echo "Workspace:"
          pwd
          ls -la
          echo
          echo "Windows:"
          ls -la windows-executable || true
          echo "macOS:"
          ls -la macos-executable || true
          echo "Linux:"
          ls -la linux-executable || true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-executable/app.exe
            macos-executable/app
            linux-executable/app
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
